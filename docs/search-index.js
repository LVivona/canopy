var searchIndex = new Map(JSON.parse('[["canopy",{"t":"PGIPNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPGPPPPNNNNNNNNNNN","n":["Leaf","Node","NodeRef","Parent","borrow","borrow_mut","children","clone","clone_into","clone_to_uninit","error","expect_children","expect_leaf","expect_prev","expect_root","fmt","","from","","has_children","insert","into","is_leaf","is_root","leaf","parent","pop","prev","to_owned","to_string","try_from","try_into","type_id","upgrade","value","next","prev","","value","","AlreadyBorrowed","DowngradeNotParent","ExpectedALeafNode","ExpectedARootNode","ExpectedChildren","IllegalDowngradeWithChildren","NodeError","NotAParent","ParentNodeNotFound","ParentUpgradeNotAllowed","RootDowngradeNotAllowed","borrow","borrow_mut","eq","fmt","","from","into","to_string","try_from","try_into","type_id"],"q":[[0,"canopy"],[35,"canopy::Node"],[40,"canopy::error"],[62,"canopy::node"],[63,"core::clone"],[64,"core::result"],[65,"core::fmt"],[66,"core::default"],[67,"core::marker"],[68,"core::option"],[69,"alloc::string"],[70,"core::any"]],"i":"f``0000000`000000h11111111111111111BhBj101Ab00000`000000000000000","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{b{{j{{h{c}}}}}}}{}}{{{b{{f{c}}}}}{{f{c}}}l}{{b{b{dc}}}n{}}{{bA`}n}`{{{b{{f{c}}}}}{{Ad{{b{{j{{h{c}}}}}}Ab}}}{}}{{{b{{f{c}}}}}{{Ad{nAb}}}{}}{{{b{{f{c}}}}}{{Ad{{h{c}}Ab}}}{}}1{{{b{{f{c}}}}{b{dAf}}}AhAj}0{{{f{c}}}{{h{c}}}{}}{cc{}}{{{b{{f{c}}}}}Al{}}{{{b{{h{c}}}}c}{{Ad{{h{c}}Ab}}}{AnlB`}}{{}c{}}22{{c{Bb{{h{c}}}}}{{h{c}}}{}}{c{{h{c}}}{}}{{{b{{h{c}}}}{b{{h{c}}}}}{{Ad{AlAb}}}{AnlB`}}{{{b{{f{c}}}}}{{Bb{{h{c}}}}}{}}{bc{}}{bBd}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bBf}{{{b{{h{c}}}}{b{{h{c}}}}}{{Ad{nAb}}}{Anl}}{{{b{{f{c}}}}}{{b{c}}}{}}````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ab}}{b{Ab}}}Al}{{{b{Ab}}{b{dAf}}}Ah}0{cc{}}{{}c{}};:98","D":"D`","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Node",0,62],[8,"NodeRef",0,62],[1,"slice"],[10,"Clone",63],[1,"unit"],[1,"u8"],[6,"NodeError",40],[6,"Result",64,null,1],[5,"Formatter",65],[8,"Result",65],[10,"Debug",65],[1,"bool"],[10,"Default",66],[10,"Copy",67],[6,"Option",68,null,1],[5,"String",69],[5,"TypeId",70],[15,"Parent",35],[15,"Leaf",35]],"r":[[0,62],[1,62],[2,62],[3,62],[4,62],[5,62],[6,62],[7,62],[8,62],[9,62],[11,62],[12,62],[13,62],[14,62],[15,62],[16,62],[17,62],[18,62],[19,62],[20,62],[21,62],[22,62],[23,62],[24,62],[25,62],[26,62],[27,62],[28,62],[29,62],[30,62],[31,62],[32,62],[33,62],[34,62]],"b":[[15,"impl-Debug-for-Node%3CT%3E"],[16,"impl-Display-for-Node%3CT%3E"],[54,"impl-Display-for-NodeError"],[55,"impl-Debug-for-NodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB4ACAAAAAEABAACAAgAAwAQAAIAHQAEACQABAA0AAQAOwADAA==","P":[[4,"T"],[9,""],[11,"T"],[21,"U"],[22,"T"],[29,""],[30,"U,T"],[31,"U"],[32,""],[33,"T"],[53,""],[56,"T"],[57,"U"],[58,""],[59,"U,T"],[60,"U"],[61,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2792]}