var searchIndex = new Map(JSON.parse('[["canopy",{"t":"PGIPNNNNNNCNNNNNNNNNNNNNNNNNNOOOOPGPPPPPNNNNNNNNNN","n":["Leaf","Node","NodeRef","Parent","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","error","expect_leaf","expect_root","fmt","","from","has_children","into","is_leaf","is_root","leaf","parent","pop","to_owned","to_string","try_from","try_into","type_id","value","next","prev","value","","DowngradeNotParent","NodeError","NotALeaf","NotAParent","NotARoot","ParentBorrowed","UpgradeNotLeaf","borrow","borrow_mut","fmt","","from","into","to_string","try_from","try_into","type_id"],"q":[[0,"canopy"],[29,"canopy::Node"],[33,"canopy::error"],[50,"canopy::node"],[51,"core::clone"],[52,"core::default"],[53,"core::result"],[54,"core::fmt"],[55,"core::marker"],[56,"alloc::string"],[57,"core::any"]],"i":"f``0000000`000000000000000000Bd0Bf1A``000000000000000","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}h}{{b{b{dc}}}j{}}{{bl}j}{{}{{f{c}}}n}`{{{b{{f{c}}}}}{{Ab{jA`}}}{}}0{{{b{{f{c}}}}{b{dAd}}}AfAh}0{cc{}}{{{b{{f{c}}}}}Aj{}}{{}c{}}11{c{{f{c}}}{}}0{{{b{d{f{c}}}}{b{{Al{c}}}}}{{Ab{AjA`}}}{nhAn}}{bc{}}{bB`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bBb}{{{b{{f{c}}}}}{{b{c}}}{}}```````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A`}}{b{dAd}}}Af}0=;7654","D":"Al","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Node",0,50],[10,"Clone",51],[1,"unit"],[1,"u8"],[10,"Default",52],[6,"NodeError",33],[6,"Result",53,null,1],[5,"Formatter",54],[8,"Result",54],[10,"Debug",54],[1,"bool"],[8,"NodeRef",0,50],[10,"Copy",55],[5,"String",56],[5,"TypeId",57],[15,"Parent",29],[15,"Leaf",29]],"r":[[0,50],[1,50],[2,50],[3,50],[4,50],[5,50],[6,50],[7,50],[8,50],[9,50],[11,50],[12,50],[13,50],[14,50],[15,50],[16,50],[17,50],[18,50],[19,50],[20,50],[21,50],[22,50],[23,50],[24,50],[25,50],[26,50],[27,50],[28,50]],"b":[[13,"impl-Display-for-Node%3CT%3E"],[14,"impl-Debug-for-Node%3CT%3E"],[42,"impl-Debug-for-NodeError"],[43,"impl-Display-for-NodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQABgAAAAEAAwAIAA4AAQAYAAQAHgAOAC8AAwA=","P":[[4,"T"],[8,""],[9,"T"],[17,"U"],[18,"T"],[24,""],[25,"U,T"],[26,"U"],[27,""],[28,"T"],[42,""],[44,"T"],[45,"U"],[46,""],[47,"U,T"],[48,"U"],[49,""]]}],["canopy",{"t":"PGIPNNNNNNCNNNNNNNNNNNNNNNNNNOOOOPGPPPPPNNNNNNNNNN","n":["Leaf","Node","NodeRef","Parent","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","error","expect_leaf","expect_root","fmt","","from","has_children","into","is_leaf","is_root","leaf","parent","pop","to_owned","to_string","try_from","try_into","type_id","value","next","prev","value","","DowngradeNotParent","NodeError","NotALeaf","NotAParent","NotARoot","ParentBorrowed","UpgradeNotLeaf","borrow","borrow_mut","fmt","","from","into","to_string","try_from","try_into","type_id"],"q":[[0,"canopy"],[29,"canopy::Node"],[33,"canopy::error"],[50,"canopy::node"],[51,"core::clone"],[52,"core::default"],[53,"core::result"],[54,"core::fmt"],[55,"core::marker"],[56,"alloc::string"],[57,"core::any"]],"i":"f``0000000`000000000000000000Bd0Bf1A``000000000000000","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}h}{{b{b{dc}}}j{}}{{bl}j}{{}{{f{c}}}n}`{{{b{{f{c}}}}}{{Ab{jA`}}}{}}0{{{b{{f{c}}}}{b{dAd}}}AfAh}0{cc{}}{{{b{{f{c}}}}}Aj{}}{{}c{}}11{c{{f{c}}}{}}0{{{b{d{f{c}}}}{b{{Al{c}}}}}{{Ab{AjA`}}}{nhAn}}{bc{}}{bB`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bBb}{{{b{{f{c}}}}}{{b{c}}}{}}```````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A`}}{b{dAd}}}Af}0=;7654","D":"Bl","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Node",0,50],[10,"Clone",51],[1,"unit"],[1,"u8"],[10,"Default",52],[6,"NodeError",33],[6,"Result",53,null,1],[5,"Formatter",54],[8,"Result",54],[10,"Debug",54],[1,"bool"],[8,"NodeRef",0,50],[10,"Copy",55],[5,"String",56],[5,"TypeId",57],[15,"Parent",29],[15,"Leaf",29]],"r":[[0,50],[1,50],[2,50],[3,50],[4,50],[5,50],[6,50],[7,50],[8,50],[9,50],[11,50],[12,50],[13,50],[14,50],[15,50],[16,50],[17,50],[18,50],[19,50],[20,50],[21,50],[22,50],[23,50],[24,50],[25,50],[26,50],[27,50],[28,50]],"b":[[13,"impl-Display-for-Node%3CT%3E"],[14,"impl-Debug-for-Node%3CT%3E"],[42,"impl-Debug-for-NodeError"],[43,"impl-Display-for-NodeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABwABwAAAAEABAAHAA4AAQAYAAQAHgADACkAAwAvAAMA","P":[[4,"T"],[8,""],[9,"T"],[17,"U"],[18,"T"],[24,""],[25,"U,T"],[26,"U"],[27,""],[28,"T"],[42,""],[44,"T"],[45,"U"],[46,""],[47,"U,T"],[48,"U"],[49,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2165,2170]}