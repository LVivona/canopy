searchState.loadedDescShard("canopy", 0, "Node is a tree data structure element which can either be …\nA reference-counted, mutable reference to a <code>Node&lt;T&gt;</code>. This …\nExpects the node to be a leaf, or returns an error.\nExpects the node to be a root, or returns an error.\nReturns the argument unchanged.\nReturn <code>bool</code> that checks if Node instance has children\nCalls <code>U::from(self)</code>.\nCheck if node is <code>Leaf</code> instance\nCheck if node is <code>Parent</code> instance\nCreate <code>Node::Leaf</code> instance\nCreate <code>Node::Parent</code> instance\nRemoves a child node from its parent (<code>Node::Parent</code>).\nReturns <code>&amp;T</code> of the <code>Node&lt;T&gt;</code>\nRaised when an attempt to downgrade a node that is not a …\nRepresents the different errors that can occur while …\nRaised when a leaf node is expected but a different type …\nRaised when a parent node is expected but a different type …\nRaised when a root node is expected but a different type …\nRaised when trying to mutate a parent node that is already …\nRaised when an attempt to upgrade a node that is not a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")